<!--
  ~ This file is part of the LIRE project: http://www.semanticmetadata.net/lire
  ~ LIRE is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or
  ~ (at your option) any later version.
  ~
  ~ LIRE is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with LIRE; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  ~
  ~ We kindly ask you to refer the any or one of the following publications in
  ~ any publication mentioning or employing Lire:
  ~
  ~ Lux Mathias, Savvas A. Chatzichristofis. Lire: Lucene Image Retrieval â€“
  ~ An Extensible Java CBIR Library. In proceedings of the 16th ACM International
  ~ Conference on Multimedia, pp. 1085-1088, Vancouver, Canada, 2008
  ~ URL: http://doi.acm.org/10.1145/1459359.1459577
  ~
  ~ Lux Mathias. Content Based Image Retrieval with LIRE. In proceedings of the
  ~ 19th ACM International Conference on Multimedia, pp. 735-738, Scottsdale,
  ~ Arizona, USA, 2011
  ~ URL: http://dl.acm.org/citation.cfm?id=2072432
  ~
  ~ Mathias Lux, Oge Marques. Visual Information Retrieval using Java and LIRE
  ~ Morgan & Claypool, 2013
  ~ URL: http://www.morganclaypool.com/doi/abs/10.2200/S00468ED1V01Y201301ICR025
  ~
  ~ Copyright statement:
  ~ ====================
  ~ (c) 2002-2013 by Mathias Lux (mathias@juggle.at)
  ~  http://www.semanticmetadata.net/lire, http://www.lire-project.net
  ~
  ~ Updated: 19.04.13 21:16
  -->

<project name="LireSampleApp" default="compile" basedir=".">
    <description>
        Most simple project you can do with Lire
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <path id="class.path">
        <fileset dir="lib" includes="*.jar"/>
        <pathelement location="${build}"/>
    </path>

    <target name="compile" depends="init" description="compile the source ">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}" classpathref="class.path"/>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
    </target>

    <target name="index" depends="compile">
        <java classpathref="class.path" classname="net.semanticmetadata.lire.sampleapp.Indexer">
            <!-- adapt this argument to use your pictures -->
            <arg value="D:/Java/Projects/Lire/testdata"/>
        </java>
    </target>

    <target name="index-parallel" depends="compile">
        <!-- Note: This needs to be forked, otherwise multi threading won't work and the heap space will be exceeded soon. -->
        <java classpathref="class.path" classname="net.semanticmetadata.lire.sampleapp.ParallelIndexing" fork="true" maxmemory="1024M">
            <jvmarg line="-Xmx1024M -server"/>
            <!-- adapt this argument to use your pictures -->
            <arg line="-i e:\idx-location -d E:\imagedirectory -n 16"/>
        </java>
    </target>

    <target name="search" depends="compile">
        <java classpathref="class.path" classname="net.semanticmetadata.lire.sampleapp.Searcher">
            <!-- adapt this argument to use your pictures -->
            <arg value="d:/temp/image.jpg"/>
        </java>
    </target>
</project>